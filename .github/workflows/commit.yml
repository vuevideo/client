name: Push docker images to Docker Hub from Feature branches.

on:
  push:
    branches:
      - feature/*/*

concurrency:
  cancel-in-progress: true
  group: client-test-build

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        ports:
          - '5432:5432'
          - '127.0.0.1:8888:5432'
        env:
          POSTGRES_USER: vuevideo_admin
          POSTGRES_PASSWORD: password
          POSTGRES_DB: vuevideo
    steps:
      - name: Checking out the server repository
        uses: actions/checkout@v3
        with:
          repository: vuevideo/server
          path: ./server

      - name: Saving Testing Firebase Keys for server
        run: echo '${{ secrets.E2E_FIREBASE_KEY }}' >> server/keys/service-account.json

      - name: Starting server in background
        working-directory: ./server
        run: |
          npm i
          nohup npm run start:dev &

      - name: Check server status
        run: wget --spider http://127.0.0.1:3000/api/v1/hello

      # - name: Saving Testing Firebase Keys
      #   run: |
      #     mkdir keys
      #     echo '${{ secrets.E2E_FIREBASE_KEY }}' >> keys/service-account.json

      #     echo "${{ secrets.E2E_FIREBASE_CONFIG }}" >> .env

      # - name: Prepopulating the database
      #   run: docker compose -f ./docker-compose.test.yml --profile prestart up --exit-code-from step_populate_user

      # - name: Running E2E tests
      #   run: docker compose -f ./docker-compose.test.yml --profile start up --exit-code-from vuevideo_e2e

      # - name: Reset Firebase Test Environment
      #   if: always()
      #   run: docker compose -f ./docker-compose.test.yml --profile poststart up

      # - name: Cypress Screenshots
      #   if: always()
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: cypress-screenshots
      #     path: |
      #       **/**.png

      # - name: Cypress Videos
      #   if: always()
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: cypress-videos
      #     path: |
      #       **/**.mp4

  # build_and_push:
  #   needs: test
  #   environment: dev
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - id: image_name
  #       name: Form proper Docker Image Name
  #       run: |
  #         DOCKER_TAG=$(echo ${{ github.ref_name }}-${{ github.sha }} | sed 's#/#-#g')
  #         DOCKER_IMAGE="${{ vars.DOCKER_REGISTRY }}/${{ vars.DOCKER_NAMESPACE }}/client:$DOCKER_TAG"

  #         echo "DOCKER_IMAGE=$DOCKER_IMAGE" >> $GITHUB_OUTPUT

  #     - name: Build Docker image
  #       run: docker build -t ${{ steps.image_name.outputs.DOCKER_IMAGE }} .

  #     - name: Logging into Docker Registry
  #       run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

  #     - name: Push into Docker Registry
  #       run: docker push ${{ steps.image_name.outputs.DOCKER_IMAGE }}
