name: Push docker images to Docker Hub after Pull Request Merge.

on:
  pull_request:
    types:
      - closed
    branches:
      - master

concurrency:
  cancel-in-progress: true
  group: client-test-build

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Saving Testing Firebase Keys
        run: |
          mkdir keys
          echo '${{ secrets.E2E_FIREBASE_KEY }}' >> keys/service-account.json
          echo "${{ secrets.E2E_FIREBASE_CONFIG }}" >> frontend.env

      - name: Prepopulating the database
        run: docker compose -f ./docker-compose.test.yml --profile prestart up --exit-code-from step_populate_user

      - name: Running E2E tests
        run: docker compose -f ./docker-compose.test.yml --profile start up --exit-code-from vuevideo_e2e

      - name: Reset Firebase Test Environment
        if: always()
        run: docker compose -f ./docker-compose.test.yml --profile poststart up

      - name: Cypress Screenshots
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cypress-screenshots
          path: |
            **/**.png

      - name: Cypress Videos
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cypress-videos
          path: |
            **/**.mp4

  build_and_push:
    needs: test
    environment: staging
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - id: image_name
        name: Form proper Docker Image Name
        run: |
          OLD_DOCKER_TAG=$(echo ${{ github.head_ref }}-${{ github.event.pull_request.head.sha }} | sed 's#/#-#g')
          NEW_DOCKER_TAG="stage-${{ github.sha }}"

          OLD_DOCKER_IMAGE="${{ vars.DOCKER_REGISTRY }}/${{ vars.DOCKER_NAMESPACE }}/client:$OLD_DOCKER_TAG"
          NEW_DOCKER_IMAGE="${{ vars.DOCKER_REGISTRY }}/${{ vars.DOCKER_NAMESPACE }}/client:$NEW_DOCKER_TAG"

          echo "OLD_DOCKER_IMAGE=$OLD_DOCKER_IMAGE" >> $GITHUB_OUTPUT
          echo "NEW_DOCKER_IMAGE=$NEW_DOCKER_IMAGE" >> $GITHUB_OUTPUT

      - name: Logging into Docker Registry
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Tagging and Pushing into Docker Registry
        run: |
          docker pull ${{ steps.image_name.outputs.OLD_DOCKER_IMAGE }}
          docker tag ${{ steps.image_name.outputs.OLD_DOCKER_IMAGE }} ${{ steps.image_name.outputs.NEW_DOCKER_IMAGE }}
          docker push ${{ steps.image_name.outputs.NEW_DOCKER_IMAGE }}
